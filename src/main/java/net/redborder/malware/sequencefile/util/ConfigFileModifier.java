package net.redborder.malware.sequencefile.util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.io.File;
import java.io.IOException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;


/**
 * Created by Lito on 23/3/15.
 */


    public class ConfigFileModifier {

    private final String CONFIG_FILE_PATH = "/opt/rb/var/rb-sequence-oozie/config/config.yml";
    private final String WORKFLOW_FILE_PATH = "/opt/rb/var/rb-sequence-oozie/workflow/workflow.xml";
    private List<String> loaders;
    private static ConfigFileModifier theInstance = null;
    private ConfigFile configfile;
    private Map<String,Integer> loadersMap;

    public ConfigFileModifier() throws Exception {
        configfile = ConfigFile.getInstance();
        loaders = configfile.getLoaders();
    }


    public void setConfiguration() {
        try {
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(WORKFLOW_FILE_PATH);

            // Get the root element
            Node company = doc.getFirstChild();

            // Get the staff element , it may not working if tag has spaces, or
            // whatever weird characters in front...it's better to use
            // getElementsByTagName() to get it directly.
            // Node staff = company.getFirstChild();

            // Get the staff element by tag name directly
            Node start = doc.getElementsByTagName("start").item(0);

            // update staff attribute
            NamedNodeMap attr = start.getAttributes();
            Node nodeAttr = attr.getNamedItem("to");
            nodeAttr.setTextContent(loaders.get(0));



            for (int i = 0; i < doc.getElementsByTagName("action").getLength(); i++) {

                Node action = doc.getElementsByTagName("action").item(i);

                int index = loaders.indexOf(action);

                if((index+1)<loaders.size()){
                  NamedNodeMap attributes =  action.getAttributes();
                    Node actionAttr = attributes.getNamedItem("ok");
                    actionAttr.setTextContent(loaders.get(index+1));
                }


            }
            String toend = loaders.get(loaders.size()-1);
            Node end = doc.getElementById("toend");
            NamedNodeMap endAttr = end.getAttributes();
            endAttr.getNamedItem("ok").getAttributes().getNamedItem("to").setTextContent(toend);

            // write the content into xml file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(new File(WORKFLOW_FILE_PATH));
            transformer.transform(source, result);

            System.out.println("Done");

        } catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        } catch (TransformerException tfe) {
            tfe.printStackTrace();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (SAXException sae) {
            sae.printStackTrace();
        }
    }
}


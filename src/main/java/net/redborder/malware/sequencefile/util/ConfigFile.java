/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.redborder.malware.sequencefile.util;

import org.ho.yaml.Yaml;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.List;
import java.util.Map;

/**
 * @author andresgomez
 */
public class ConfigFile {

	private static ConfigFile theInstance = null;
	private static final Object initMonitor = new Object();
	private final String CONFIG_FILE_PATH = "/opt/rb/var/rb-sequence-oozie/conf/config.yml";
	private Map<String, Object> _general;
	private Map<String, Object> _fast_loaders;
	private Map<String, Object> _cuckoo;
	private List<String> _loaders;
	private static String _mode;
	private List<String> _logstash_managers;

	public static ConfigFile getInstance() {
		if (theInstance == null) {
			synchronized (initMonitor) {
				try {
					while (theInstance == null) {
						initMonitor.wait();
					}
				} catch (InterruptedException e) {
					// ignore
				}
			}
		}
		return theInstance;
	}

	public static void init() throws FileNotFoundException {
		synchronized (initMonitor) {
			if (theInstance == null) {
				theInstance = new ConfigFile();
				initMonitor.notifyAll();
			}
		}
	}

	/**
	 * Constructor
	 */
	public ConfigFile() throws FileNotFoundException {
		reload();
	}

	public void reload() throws FileNotFoundException {

		Map<String, Object> map = (Map<String, Object>) Yaml.load(new File(CONFIG_FILE_PATH));

		/* General Config */
		_general = (Map<String, Object>) map.get("general");
		_fast_loaders = (Map<String, Object>) map.get("fast_loaders");
		_cuckoo = (Map<String, Object>) map.get("cuckoo");
		_loaders = (List) map.get("loaders");
		_logstash_managers = (List<String>) map.get("logstash_managers");
	}

	public String getZkConnect() {
		return (String) getFromGeneral("zk_connect", "127.0.0.1:2181");
	}

	/**
	 * Getter.
	 *
	 * @param property Property to read from the general section
	 * @return Property read
	 */

	public <T> T getFromGeneral(String property, T default_ret) {
		T ret = null;
		
		if (_general != null) {
			ret = (T) _general.get(property);
			if (ret == null) {
				ret = default_ret;
			}
		}

		return ret;
	}

	public <T> T getFromFastLoaders(String property, T default_ret) {
		T ret = null;

		if (_fast_loaders != null) {
			ret = (T) _fast_loaders.get(property);
			if (ret == null) {
				ret = default_ret;
			}
		}

		return ret;
	}

	public <T> T getFromCuckoo(String property, T default_ret) {
		T ret = null;

		if (_cuckoo != null) {
			ret = (T) _cuckoo.get(property);
			if (ret == null) {
				ret = default_ret;
			}
		}

		return ret;
	}

	public List<String> getLoaders() {
		return _loaders;
	}

	public static String getMode() {
		return _mode;
	}

	public List<String> getLogstashManagers() {
		return _logstash_managers;
	}
}
